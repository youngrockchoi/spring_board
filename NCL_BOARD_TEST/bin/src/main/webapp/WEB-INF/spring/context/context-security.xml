<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/favicon.ico" security="none" />
	<!-- 
	<security:http pattern="\A/WEB-INF/jsp/.*\Z" request-matcher="regex" security="none"/>
	 -->
	 
	<!-- 
	grade 127	- "ROLE_SYS"	- 시스템관리자 
	grade 63	- "ROLE_ADMIN"	- 관리자
	grade 31	- "ROLE_MANGER"	- 관리자(권한제거)
	grade 1		- "ROLE_USER"	- 유저(기본값)	 
	guest 0 	- "ROLE_GEUST"	- 게스트 
	--> 
	 
	<security:http auto-config="true" use-expressions="true">
		<!-- iframe 사용 -->
		<security:headers>
			<security:frame-options policy="SAMEORIGIN"/>
		</security:headers>
		
		<security:intercept-url  pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url  pattern="/auth/**" access="isAnonymous()" />
		<!-- <security:intercept-url  pattern="/main" access="hasRole('ROLE_ADMIN')" /> -->
		<!-- 
		<security:intercept-url  pattern="/config*" access="hasAnyRole('ROLE_SYS', 'ROLE_ADMIN')" />
		<security:intercept-url  pattern="/dataDown" access="hasAnyRole('ROLE_SYS', 'ROLE_ADMIN', 'ROLE_MANGER', 'ROLE_USER')" />
		 -->
		<security:intercept-url  pattern="/**" access="isAuthenticated()" />

		<security:access-denied-handler error-page="/auth/accessDenied"/>
				
		<security:csrf disabled="false"/>
		
		<security:form-login
				username-parameter="userID"
				password-parameter="userPW"
				login-page="/auth/login"
				
				authentication-failure-handler-ref="userLoginFailHandler"
				authentication-success-handler-ref="userLoginSuccessHandler"
				
		/>
	
		
<!--
 		<security:remember-me 
				key="netchannel" 
				user-service-ref="userLoginService"
				remember-me-parameter="remember-me"
				remember-me-cookie="rememberCookie"
				token-validity-seconds="86400"
				authentication-success-handler-ref="userLoginSuccessHandler"
		/>
-->
		
		<security:logout logout-url="/logout" logout-success-url="/main"  invalidate-session="true"/>
	</security:http>
	
	<!-- 패스워드 단방향 암호화 --> 
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<security:authentication-manager>
		<security:authentication-provider ref="userLoginAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- 	
	<bean id="egovUserDetailsHelper" class="kr.nclcorp.comm.util.EgovUserDetailsHelper">
		<property name="egovUserDetailsService">
			원하는 bean id를 아래에 ref 태그에 적용한다
			<ref bean="egovUserDetailsSessionService" />
		</property>
	</bean>
	 -->
	 <!-- 세션을 이용한 인증을 사용하는 빈 -->
<!--      <bean id="egovUserDetailsSessionService" class="kr.nclcorp.comm.util.EgovUserDetailsSessionServiceImpl"/> -->
     
     <!-- 2. 스프링 시큐리티를 이용한 인증을 사용할 빈 -->
<!--      <bean id="egovUserDetailsSecurityService" class="kr.nclcorp.comm.util.EgovUserDetailsSecurityServiceImpl"/> -->
	

</beans>
